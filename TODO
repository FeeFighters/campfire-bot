- need to catch timeout errors and do something sensible, like wait and retry the connection

- need to catch no-network errors and return a sensible error message:

/opt/local/lib/ruby/1.8/net/http.rb:560:in `initialize': Network is unreachable - connect(2) (Errno::ENETUNREACH)

- plugins need callbacks, like on_join, bot_loaded, etc.

- multi-room support

- gem-ify the bot and have it provide an executable to generate an application directory 
  like rails

- move the plugins into their own repository and provide a way for them to be installed 
  into the app dir above (like script/plugin install)

- use a message handler chain in the same way that activesupport uses callback chains.

- provide a way for plugins to buffer themselves, so they don't run too many times

- buffer the "speak" calls so that they can be uniq'ed before printed to the channel?

- plugins should be able to register respond_to blocks with a notion of priority.
  eg. a low-priority command can say it doesn't need to be processed if something else matches.
  conversely, a high-priority command can cause to bot to stop processing the message once it has matched.

- create a plugin that pulls in unfuddle ticket reports, eg. !unfuddle project_name active_tickets

- modify the austin powers plugin to be a generic imdb quote puller. eg. !imdb austin_powers